// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id          String       @id @default(cuid())
  name        String       @default("")
  email       String       @unique @default("")
  password    String
  isAdmin     Boolean      @default(false)
  restaurants Restaurant[] @relation("Restaurant_user")
}

model Restaurant {
  id                           String         @id @default(cuid())
  name                         String         @default("")
  photo_filesize               Int?
  photo_extension              String?
  photo_width                  Int?
  photo_height                 Int?
  photo_id                     String?
  banner_filesize              Int?
  banner_extension             String?
  banner_width                 Int?
  banner_height                Int?
  banner_id                    String?
  user                         User?          @relation("Restaurant_user", fields: [userId], references: [id])
  userId                       String?        @map("user")
  phone                        String         @default("")
  address                      String         @default("")
  email                        String         @default("")
  from_FoodCategory_restaurant FoodCategory[] @relation("FoodCategory_restaurant")
  from_Review_restaurant       Review[]       @relation("Review_restaurant")

  @@index([userId])
}

model FoodCategory {
  id                 String      @id @default(cuid())
  name               String      @default("")
  restaurant         Restaurant? @relation("FoodCategory_restaurant", fields: [restaurantId], references: [id])
  restaurantId       String?     @map("restaurant")
  from_Food_category Food[]      @relation("Food_category")

  @@index([restaurantId])
}

model Food {
  id                   String        @id @default(cuid())
  name                 String        @default("")
  price                String        @default("")
  photo_filesize       Int?
  photo_extension      String?
  photo_width          Int?
  photo_height         Int?
  photo_id             String?
  ingredients          String        @default("")
  category             FoodCategory? @relation("Food_category", fields: [categoryId], references: [id])
  categoryId           String?       @map("category")
  from_FoodReview_food FoodReview[]  @relation("FoodReview_food")

  @@index([categoryId])
}

model Review {
  id           String      @id @default(cuid())
  username     String      @default("")
  rate         Int?
  text         String      @default("")
  restaurant   Restaurant? @relation("Review_restaurant", fields: [restaurantId], references: [id])
  restaurantId String?     @map("restaurant")

  @@index([restaurantId])
}

model FoodReview {
  id       String  @id @default(cuid())
  username String  @default("")
  rate     Int?
  text     String  @default("")
  food     Food?   @relation("FoodReview_food", fields: [foodId], references: [id])
  foodId   String? @map("food")

  @@index([foodId])
}